variables:
  CI_BUILD_ARCHS: linux/arm64,linux/amd64
  DOCKER_HOST: tcp://docker:2375/

stages:
- test
- build_files
- build_images

test_version:
  stage: test
  only:
  - tags
  image: alpine:3
  before_script:
  - apk add jq
  script:
  # make sure that git tag is equal to the version in package.json
  - test "$CI_COMMIT_TAG" = "$(jq -r .version client/package.json)"
  - test "$CI_COMMIT_TAG" = "$(jq -r .version server/package.json)"

build_files_job:
  stage: build_files
  only:
  - tags
  image: cl00e9ment/node.js-builder:light
  before_script:
  - pnpm config set store-dir .pnpm-store
  script:
  # client
  - cd client
  - pnpm install --frozen-lockfile
  - CI=false pnpm build
  - cd ..
  # server
  - cd server
  - pnpm install --frozen-lockfile
  - pnpm build
  - pnpm install --frozen-lockfile --prod
  - cd ..
  # create the artifact
  - mkdir app
  - mv client/build app/www
  - mv server/build server/package.json server/pnpm-lock.yaml app
  cache:
    key: "pnpm-store-cache"
    paths:
    - .pnpm-store
  artifacts:
    paths:
    - app
    expire_in: 1 hour

build_images_job:
  stage: build_images
  only:
  - tags
  image: jonoh/docker-buildx-qemu
  services:
  - docker:dind
  before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  # Use docker-container driver to allow useful features (push/multi-platform)
  - docker buildx create --driver docker-container --use
  - docker buildx inspect --bootstrap
  script:
  - update-binfmts --enable # Important: Ensures execution of other binary formats is enabled in the kernel
  - docker buildx build --platform $CI_BUILD_ARCHS --progress plain --pull -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" -t "${CI_REGISTRY_IMAGE}:latest" --push .
